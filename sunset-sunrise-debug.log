2022-01-28 13:06:37,188 [DEBUG] Telnet GET Answer0x0102006E: 0
2022-01-28 13:06:37,195 [DEBUG] Telnet GET Answer0x0102006F: 0
2022-01-28 13:06:37,204 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:07:07,213 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:07:07,219 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:07:37,230 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:07:37,231 [DEBUG] Press Ctrl+C to exit
2022-01-28 13:07:41,405 [DEBUG] Telnet GET Answer0x0102006E: 0
2022-01-28 13:07:41,411 [DEBUG] Telnet GET Answer0x0102006F: 0
2022-01-28 13:07:41,417 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:08:11,428 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:08:11,442 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:09:24,238 [DEBUG] Telnet GET Answer0x0102006E: 1
2022-01-28 13:09:24,264 [DEBUG] Telnet GET Answer0x0102006F: 1
2022-01-28 13:09:24,295 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:10:51,965 [DEBUG] Telnet GET Answer0x0102006E: 0
2022-01-28 13:10:51,977 [DEBUG] Telnet GET Answer0x0102006F: 0
2022-01-28 13:10:52,005 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:11:22,021 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:11:22,035 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:11:37,470 [DEBUG] Telnet GET Answer0x0102006E: 0
2022-01-28 13:11:37,505 [DEBUG] Telnet GET Answer0x0102006F: 1
2022-01-28 13:11:37,525 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:13:18,910 [DEBUG] Telnet GET Answer0x0102006E: 1
2022-01-28 13:13:18,918 [DEBUG] Telnet GET Answer0x0102006F: 1
2022-01-28 13:13:18,926 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:13:48,945 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:13:48,971 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:14:18,993 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:14:18,993 [DEBUG] Press Ctrl+C to exit
2022-01-28 13:16:22,304 [DEBUG] Telnet GET Answer0x0102006E: 1
2022-01-28 13:16:22,312 [DEBUG] Telnet GET Answer0x0102006F: 1
2022-01-28 13:16:22,324 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:16:52,341 [DEBUG] Telnet SET Answer0x0102006E: A
2022-01-28 13:16:52,349 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:17:22,369 [DEBUG] Telnet SET Answer0x0102006F: A
2022-01-28 13:17:22,370 [DEBUG] Press Ctrl+C to exit
2022-01-28 13:18:36,192 [DEBUG] Telnet GET Answer0x0102006e: 0
2022-01-28 13:18:36,198 [DEBUG] Telnet GET Answer0x0102006f: 0
2022-01-28 13:18:36,204 [DEBUG] Telnet SET Answer0x0102006e: A
2022-01-28 13:19:06,221 [DEBUG] Telnet SET Answer0x0102006e: A
2022-01-28 13:19:06,229 [DEBUG] Telnet SET Answer0x0102006f: A
2022-01-28 13:19:36,239 [DEBUG] Telnet SET Answer0x0102006f: A
2022-01-28 13:19:36,240 [DEBUG] Press Ctrl+C to exit
2022-01-28 13:41:59,286 [DEBUG] Telnet GET Answer0x0102006e: 0
2022-01-28 13:41:59,292 [DEBUG] Telnet GET Answer0x0102006f: 1
2022-01-28 13:41:59,317 [DEBUG] Telnet SET Answer0x0102006e: A
2022-01-28 13:44:11,224 [DEBUG] Telnet GET Answer0x0102006e: 0
2022-01-28 13:44:11,250 [DEBUG] Telnet GET Answer0x0102006f: 0
2022-01-28 13:44:11,256 [DEBUG] Telnet SET Answer0x0102006e: A
2022-01-28 13:44:41,272 [DEBUG] Telnet SET Answer0x0102006e: A
2022-01-28 13:44:41,295 [DEBUG] Telnet SET Answer0x0102006f: A
2022-01-28 13:45:11,343 [DEBUG] Telnet SET Answer0x0102006f: A
2022-01-28 13:45:11,343 [DEBUG] Press Ctrl+C to exit
2022-01-28 18:11:49,478 [DEBUG] sunset
2022-01-28 18:11:49,479 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:11:49,479 [DEBUG] sunrise
2022-01-28 18:11:49,479 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:11:49,480 [DEBUG] sunset
2022-01-28 18:11:49,480 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:11:49,534 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:11:49,534 [DEBUG] sunrise
2022-01-28 18:11:49,534 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:11:49,535 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:11:49,535 [DEBUG] None
2022-01-28 18:11:49,536 [INFO] Added job "closeCurtains" to job store "default"
2022-01-28 18:11:49,536 [INFO] Added job "openCurtains" to job store "default"
2022-01-28 18:11:49,536 [INFO] Scheduler started
2022-01-28 18:11:49,536 [DEBUG] Looking for jobs to run
2022-01-28 18:11:49,536 [DEBUG] Next wakeup is due at 2022-01-29 09:43:04.134027+02:00 (in 55874.597363 seconds)
2022-01-28 18:11:49,536 [DEBUG] Press Ctrl+C to exit
2022-01-28 18:11:52,540 [INFO] Scheduler has been shut down
2022-01-28 18:11:52,540 [DEBUG] Looking for jobs to run
2022-01-28 18:11:52,540 [DEBUG] No jobs; waiting until a job is added
2022-01-28 18:17:06,685 [DEBUG] sunset
2022-01-28 18:17:06,685 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:17:06,685 [DEBUG] sunrise
2022-01-28 18:17:06,686 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:17:06,686 [DEBUG] sunset
2022-01-28 18:17:06,686 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:17:06,750 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:17:06,750 [DEBUG] sunrise
2022-01-28 18:17:06,750 [DEBUG] {'dawn': datetime.datetime(2022, 1, 29, 7, 5, 49, 8487, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunrise': datetime.datetime(2022, 1, 29, 7, 43, 4, 134027, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'noon': datetime.datetime(2022, 1, 29, 12, 13, 2, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'sunset': datetime.datetime(2022, 1, 29, 16, 43, 46, 467231, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>), 'dusk': datetime.datetime(2022, 1, 29, 17, 21, 4, 30221, tzinfo=<DstTzInfo 'Europe/London' GMT0:00:00 STD>)}
2022-01-28 18:17:06,751 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:17:06,751 [DEBUG] None
2022-01-28 18:17:06,752 [INFO] Added job "closeCurtains" to job store "default"
2022-01-28 18:17:06,752 [INFO] Added job "openCurtains" to job store "default"
2022-01-28 18:17:06,752 [INFO] Scheduler started
2022-01-28 18:17:06,752 [DEBUG] Looking for jobs to run
2022-01-28 18:17:06,752 [DEBUG] Next wakeup is due at 2022-01-29 09:43:04.134027+02:00 (in 55557.381181 seconds)
2022-01-28 18:17:06,752 [DEBUG] Press Ctrl+C to exit
2022-01-28 18:17:11,094 [INFO] Scheduler has been shut down
2022-01-28 18:17:11,094 [DEBUG] Looking for jobs to run
2022-01-28 18:17:11,094 [DEBUG] No jobs; waiting until a job is added
2022-01-28 18:37:38,468 [DEBUG] sunset
2022-01-28 18:37:38,469 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:37:38,470 [DEBUG] sunrise
2022-01-28 18:37:38,470 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:37:38,470 [DEBUG] sunset
2022-01-28 18:37:38,470 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:37:38,528 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:37:38,528 [DEBUG] sunrise
2022-01-28 18:37:38,528 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:37:38,528 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:37:38,528 [DEBUG] None
2022-01-28 18:37:38,529 [INFO] Added job "closeCurtains" to job store "default"
2022-01-28 18:37:38,529 [INFO] Added job "openCurtains" to job store "default"
2022-01-28 18:37:38,529 [INFO] Scheduler started
2022-01-28 18:37:38,529 [DEBUG] Looking for jobs to run
2022-01-28 18:37:38,529 [DEBUG] Press Ctrl+C to exit
2022-01-28 18:37:38,529 [DEBUG] Next wakeup is due at 2022-01-29 07:26:00+02:00 (in 46101.470086 seconds)
2022-01-28 18:37:56,822 [INFO] Scheduler has been shut down
2022-01-28 18:37:56,823 [DEBUG] Looking for jobs to run
2022-01-28 18:37:56,823 [DEBUG] No jobs; waiting until a job is added
2022-01-28 18:42:14,185 [DEBUG] sunset
2022-01-28 18:42:14,185 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:42:14,185 [DEBUG] sunrise
2022-01-28 18:42:14,185 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:42:14,186 [DEBUG] sunset
2022-01-28 18:42:14,186 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:42:14,235 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:42:14,235 [DEBUG] sunrise
2022-01-28 18:42:14,235 [DEBUG] {'sunrise': datetime.datetime(2022, 1, 29, 7, 26, tzinfo=tzlocal()), 'sunset': datetime.datetime(2022, 1, 29, 16, 58, tzinfo=tzlocal())}
2022-01-28 18:42:14,235 [INFO] Adding job tentatively -- it will be properly scheduled when the scheduler starts
2022-01-28 18:42:14,236 [DEBUG] None
2022-01-28 18:42:14,236 [INFO] Added job "closeCurtains" to job store "default"
2022-01-28 18:42:14,236 [INFO] Added job "openCurtains" to job store "default"
2022-01-28 18:42:14,236 [INFO] Scheduler started
2022-01-28 18:42:14,236 [DEBUG] Looking for jobs to run
2022-01-28 18:42:14,237 [DEBUG] Next wakeup is due at 2022-01-29 07:56:00+02:00 (in 47625.763043 seconds)
2022-01-28 18:42:14,237 [DEBUG] Press Ctrl+C to exit
2022-01-28 18:42:34,451 [INFO] Scheduler has been shut down
2022-01-28 18:42:34,451 [DEBUG] Looking for jobs to run
2022-01-28 18:42:34,452 [DEBUG] No jobs; waiting until a job is added
